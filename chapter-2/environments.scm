#lang eopl
(define (none)
  '(none))
(define (some v)
  (list 'some v))
(define (empty-env)
  '(empty-env))
(define (extend-env var val env)
  (list 'extend-env var val env))
(define (apply-env var env)
  (define (env->var env)
    (list-ref env 1))
  (define (env->sub-env env)
    (list-ref env 3))
  (define (env->val env)
    (list-ref env 2))
  (define (empty-env? env)
    (eqv? 'empty-env (car env)))
  (define (apply-non-empty var env)
    (if (eqv? (env->var env) var)
        (some (env->val env))
        (apply-env var (env->sub-env env))))
  (cond
    ((empty-env? env) (none))
    (else (apply-non-empty var env))))